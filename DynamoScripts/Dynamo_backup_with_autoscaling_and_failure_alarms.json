{
  "objects": [
    {
      "period": "6 Hours",
      "name": "Every 6 hours",
      "id": "DefaultSchedule",
      "type": "Schedule",
      "startAt": "FIRST_ACTIVATION_DATE_TIME"
    },
    {
      "dependsOn": {
        "ref": "TableBackupActivity"
      },
      "onFail": {
        "ref": "ActionId_L9qwn"
      },
      "name": "EnableAutoScale",
      "runsOn": {
        "ref": "ResourceId_8nQdm"
      },
      "id": "ShellCommandActivityId_vhQEb",
      "type": "ShellCommandActivity",
      "command": "#!/bin/bash \n#static value that will be used to DECREMENT Read Throughput \nTABLE_NAME=ci-local-test_Audit_25_sep_2\nMIN_CAPACITY=1\nMAX_CAPACITY=2\nDEC=50 \n#variables to store the current read and write throughput \nREAD=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text) \nWRITE=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME --query 'Table.[ProvisionedThroughput.WriteCapacityUnits]' --output text) \n\n\n#Decrement the read throughput that was increased for Backup \naws dynamodb update-table --region=us-east-1 --table-name $TABLE_NAME --provisioned-throughput ReadCapacityUnits=$(expr $READ - $DEC),WriteCapacityUnits=$WRITE \n# Register Targets\n\nDECREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\n\nwhile [ \"$DECREASED_READ\" != $(expr $READ - $DEC) ]\ndo\nDECREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\necho \"Read Capacity =>\" $DECREASED_READ \nsleep 15\ndone\n\nDECREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\necho \"Final Read Capacity =>\" $DECREASED_READ \n\n\n\naws application-autoscaling register-scalable-target --service-namespace dynamodb --resource-id \"table/$TABLE_NAME\" --scalable-dimension \"dynamodb:table:ReadCapacityUnits\" --min-capacity 5  --max-capacity 5000 --role-arn arn:aws:iam::622917879879:role/CloudopsIAMAutoscalingServiceRole --region=us-east-1\n\nsleep 10\n\n# Register Policy\naws application-autoscaling put-scaling-policy  --service-namespace dynamodb   --resource-id \"table/$TABLE_NAME\"  --scalable-dimension \"dynamodb:table:ReadCapacityUnits\" --policy-name \"${TABLE_NAME}_scalingpolicy\" --policy-type \"TargetTrackingScaling\" --target-tracking-scaling-policy-configuration https://s3.amazonaws.com/laserunicorntest/ScalingPolicy.json --region=us-east-1\n\n "
    },
    {
      "subnetId": "subnet-123456",
      "resourceRole": "rolename",
      "role": "DataPipelineDefaultRole",
      "imageId": "ami-cb9ec1b1",
      "securityGroupIds": "sg-123456789",
      "instanceType": "t2.micro",
      "name": "EC2Resource",
      "keyPair": "key_name",
      "id": "ResourceId_8nQdm",
      "type": "Ec2Resource",
      "terminateAfter": "12 Hours"
    },
    {
      "bootstrapAction": "s3://#{myDDBRegion}.elasticmapreduce/bootstrap-actions/configure-hadoop, --yarn-key-value,yarn.nodemanager.resource.memory-mb=11520,--yarn-key-value,yarn.scheduler.maximum-allocation-mb=11520,--yarn-key-value,yarn.scheduler.minimum-allocation-mb=1440,--yarn-key-value,yarn.app.mapreduce.am.resource.mb=2880,--mapred-key-value,mapreduce.map.memory.mb=5760,--mapred-key-value,mapreduce.map.java.opts=-Xmx4608M,--mapred-key-value,mapreduce.reduce.memory.mb=2880,--mapred-key-value,mapreduce.reduce.java.opts=-Xmx2304m,--mapred-key-value,mapreduce.map.speculative=false",
      "name": "EmrClusterForBackup",
      "coreInstanceType": "c4.2xlarge",
      "coreInstanceCount": "1",
      "amiVersion": "3.9.0",
      "masterInstanceType": "m3.xlarge",
      "id": "EmrClusterForBackup",
      "region": "#{myDDBRegion}",
      "type": "EmrCluster",
      "terminateAfter": "9 Hours"
    },
    {
      "failureAndRerunMode": "CASCADE",
      "schedule": {
        "ref": "DefaultSchedule"
      },
      "resourceRole": "DataPipelineDefaultResourceRole",
      "role": "DataPipelineDefaultRole",
      "pipelineLogUri": "s3://backup_folder/",
      "scheduleType": "cron",
      "name": "Default",
      "id": "Default"
    },
    {
      "onFail": {
        "ref": "ActionId_L9qwn"
      },
      "name": "DisableAutoscale",
      "id": "ShellCommandActivityId_YgIDl",
      "runsOn": {
        "ref": "ResourceId_8nQdm"
      },
      "type": "ShellCommandActivity",
      "command": "#!/bin/bash \n#static value that will be used to INCREMENT Read Throughput for Backup process \nTABLE_NAME=ci-local-test_Audit_25_sep_2\nMIN_CAPACITY=1\nMAX_CAPACITY=2\nINC=50\n#variables to store the current read and write throughput \nWRITE=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME --query 'Table.[ProvisionedThroughput.WriteCapacityUnits]' --output text)\n\n#disable autoscaling\n\naws application-autoscaling deregister-scalable-target --service-namespace dynamodb --resource-id \"table/$TABLE_NAME\" --scalable-dimension \"dynamodb:table:ReadCapacityUnits\"  --region=us-east-1\nif [ $? != 0 ] ; then \nexit 1\nelse\n\n## wait until auto scaling disabled\nwhile true\ndo\nif [[ $(aws application-autoscaling describe-scalable-targets --service-namespace dynamodb --resource-id \"table/$TABLE_NAME\"  --region=us-east-1 --scalable-dimension \"dynamodb:table:ReadCapacityUnits\" | grep 'ScalableDimension') ]]; then\necho \"Autoscaling Enabled\" \nelse\necho \"Autoscaling Disabled\"\nbreak\nfi\ndone\n####\n\n#incrementing the read throughput \naws dynamodb update-table --region=us-east-1 --table-name $TABLE_NAME --provisioned-throughput ReadCapacityUnits=$(expr $MAX_CAPACITY + $INC),WriteCapacityUnits=$WRITE \n  if [ $? != 0 ] ; then \n  aws application-autoscaling register-scalable-target --service-namespace dynamodb --resource-id \"table/$TABLE_NAME\" --scalable-dimension \"dynamodb:table:ReadCapacityUnits\" --min-capacity $MIN_CAPACITY  --max-capacity $MAX_CAPACITY --role-arn arn:aws:iam::622917879879:role/CloudopsIAMAutoscalingServiceRole --region=us-east-1\nsleep 10\n\n   # Register Policy\n   aws application-autoscaling put-scaling-policy  --service-namespace dynamodb   --resource-id \"table/$TABLE_NAME\"  --scalable-dimension \"dynamodb:table:ReadCapacityUnits\" --policy-name \"$TABLE_NAME\" --policy-type \"TargetTrackingScaling\" --target-tracking-scaling-policy-configuration https://s3.amazonaws.com/laserunicorntest/ScalingPolicy.json --region=us-east-1\n\n  exit 1\n  fi\n\t\necho Previouscommandsuccessful  \nfi\n\n\n\n\nINCREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\n\nwhile [ \"$INCREASED_READ\" != $(expr $MAX_CAPACITY + $INC) ]\ndo\nINCREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\necho \"Read Capacity =>\" $INCREASED_READ \nsleep 15\ndone\n\nINCREASED_READ=$(aws dynamodb describe-table --region=us-east-1 --table-name $TABLE_NAME  --query 'Table.[ProvisionedThroughput.ReadCapacityUnits]' --output text)\necho \"Final Read Capacity =>\" $INCREASED_READ \n"
    },
    {
      "readThroughputPercent": "#{myDDBReadThroughputRatio}",
      "name": "DDBSourceTable",
      "id": "DDBSourceTable",
      "type": "DynamoDBDataNode",
      "tableName": "#{myDDBTableName}"
    },
    {
      "role": "DataPipelineDefaultRole",
      "subject": "Dynamo-Backup-Failed: table name",
      "name": "Failure Alarm",
      "id": "ActionId_L9qwn",
      "type": "SnsAlarm",
      "message": "Backup of table table name failed",
      "topicArn": "arn:aws:sns:us-east-1:622917879879:aui-ot"
    },
    {
      "directoryPath": "#{myOutputS3Loc}/#{format(@scheduledStartTime, 'YYYY-MM-dd-HH-mm-ss')}",
      "name": "S3BackupLocation",
      "id": "S3BackupLocation",
      "type": "S3DataNode"
    },
    {
      "output": {
        "ref": "S3BackupLocation"
      },
      "input": {
        "ref": "DDBSourceTable"
      },
      "onFail": {
        "ref": "ActionId_L9qwn"
      },
      "dependsOn": {
        "ref": "ShellCommandActivityId_YgIDl"
      },
      "maximumRetries": "0",
      "name": "TableBackupActivity",
      "step": "s3://dynamodb-emr-#{myDDBRegion}/emr-ddb-storage-handler/2.1.0/emr-ddb-2.1.0.jar,org.apache.hadoop.dynamodb.tools.DynamoDbExport,#{output.directoryPath},#{input.tableName},#{input.readThroughputPercent}",
      "id": "TableBackupActivity",
      "runsOn": {
        "ref": "EmrClusterForBackup"
      },
      "type": "EmrActivity",
      "resizeClusterBeforeRunning": "true"
    }
  ],
  "parameters": [
    {
      "description": "Output S3 folder",
      "id": "myOutputS3Loc",
      "type": "AWS::S3::ObjectKey"
    },
    {
      "description": "Source DynamoDB table name",
      "id": "myDDBTableName",
      "type": "String"
    },
    {
      "default": "0.25",
      "watermark": "Enter value between 0.1-1.0",
      "description": "DynamoDB read throughput ratio",
      "id": "myDDBReadThroughputRatio",
      "type": "Double"
    },
    {
      "default": "us-east-1",
      "watermark": "us-east-1",
      "description": "Region of the DynamoDB table",
      "id": "myDDBRegion",
      "type": "String"
    }
  ],
  "values": {
    "myDDBRegion": "us-east-1",
    "myDDBTableName": "table_name",
    "myDDBReadThroughputRatio": "0.85",
    "myOutputS3Loc": "s3://backup_folder/"
  }
}